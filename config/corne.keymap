/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        GamingLayer {
            bindings = <&tog 3>;
            key-positions = <37 40>;
        };

        dvorak {
            bindings = <&tog 4>;
            key-positions = <40 37 0 11>;
        };

        Layer5 {
            bindings = <&tog 5>;
            key-positions = <37 40 0>;
        };

        Layer6 {
            bindings = <&tog 6>;
            key-positions = <37 40 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp ESCAPE    &kp Q  &kp W  &kp E             &kp R  &kp T             &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB       &kp A  &kp S  &kp D             &kp F  &kp G             &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_WIN  &kp Z  &kp X  &kp C             &kp V  &kp B             &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RET
                            &kp LEFT_CONTROL  &mo 1  &kp LEFT_SHIFT    &kp SPACE  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp F9  &kp F10  &kp F11  &kp F12   &bt BT_SEL 0  &bt BT_CLR      &kp N7     &kp N8  &kp N9   &kp MINUS       &kp EQUAL       &kp BSPC
&kp F5  &kp F6   &kp F7   &kp F8    &bt BT_SEL 1  &bt BT_SEL 2    &kp N4     &kp N5  &kp N6   &kp SLASH       &kp UP_ARROW    &kp ASTRK
&kp F1  &kp F2   &kp F3   &kp F4    &bt BT_SEL 3  &bt BT_SEL 4    &kp N1     &kp N2  &kp N3   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
                          &kp LGUI  &trans        &kp RET         &kp SPACE  &kp N0  &kp DOT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp RET      &kp SPACE  &trans     &kp RALT
            >;
        };

        GamerLayer {
            display-name = "Game";
            bindings = <
&kp ESCAPE        &kp Q  &kp W  &kp E    &kp R   &kp T        &kp Y      &kp U         &kp I      &kp O           &kp P           &kp BSPC
&kp LEFT_SHIFT    &kp A  &kp S  &kp D    &kp F   &kp G        &kp H      &kp J         &kp K      &kp L           &kp UP_ARROW    &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C    &kp V   &kp B        &kp N      &kp M         &kp COMMA  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
                                &kp RET  &kp F3  &kp SPACE    &kp SPACE  &kp LEFT_WIN  &kp RALT
            >;
        };

        Dvorak {
            bindings = <
&kp ESC       &kp SQT        &kp COMMA  &kp PERIOD        &kp P  &kp Y             &kp F      &kp G  &kp C         &kp R  &kp L  &kp BACKSPACE
&kp TAB       &kp A          &kp O      &kp E             &kp U  &kp I             &kp D      &kp H  &kp T         &kp N  &kp S  &kp SLASH
&kp LEFT_WIN  &kp SEMICOLON  &kp Q      &kp J             &kp K  &kp X             &kp B      &kp M  &kp W         &kp V  &kp Z  &kp RET
                                        &kp LEFT_CONTROL  &mo 1  &kp LEFT_SHIFT    &kp SPACE  &mo 2  &kp LEFT_ALT
            >;

            label = "Dvorak";
        };

        layer_5 {
            bindings = <
&kp ESC   &kp Q  &kp W  &kp E      &kp R   &kp T        &kp Y      &kp U   &kp I      &kp O    &kp P     &kp BSPC
&kp TAB   &kp A  &kp S  &kp D      &kp F   &kp G        &kp H      &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&kp LGUI  &kp Z  &kp X  &kp C      &kp V   &kp B        &kp N      &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                        &kp LCTRL  &trans  &kp LSHFT    &kp SPACE  &trans  &kp LALT
            >;
        };

        layer_6 {
            bindings = <
&kp ESC   &kp Q  &kp W  &kp E      &kp R   &kp T        &kp Y      &kp U   &kp I      &kp O    &kp P     &kp BSPC
&kp TAB   &kp A  &kp S  &kp D      &kp F   &kp G        &kp H      &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&kp LGUI  &kp Z  &kp X  &kp C      &kp V   &kp B        &kp N      &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                        &kp LCTRL  &trans  &kp LSHFT    &kp SPACE  &trans  &kp LALT
            >;
        };
    };
};
